service: stock-information-service

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs12.x
  stage: local
  region: us-east-2
  environment:
    USER_INFO_TABLE: ${self:service}-users-${opt:stage, self:provider.stage}

functions:
  userInfoSubmission:
    handler: api/userInfo.submit
    memorySize: 128
    description: Submit user information.
    events:
      - http: 
          path: userInfo
          method: post
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false
          
  fetchUserInfo:
    handler: api/userInfo.fetchUsers
    memorySize: 128
    description: get users information.
    events:
      - http: 
          path: userInfo
          method: get      
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false  

  fetchByUser:
    handler: api/userInfo.fetchByUserEmail
    memorySize: 128
    description: get users information.
    events:
      - http: 
          path: userInfo/{email}
          method: get      
          cors:
            origin: '*' # <-- Specify allowed origin
            headers: # <-- Specify allowed headers
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: false  

iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
    Resource: "*"         

resources:
  Resources:
    UserInfoDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
       TableName: ${self:provider.environment.USER_INFO_TABLE}
       AttributeDefinitions:
          -
            AttributeName: "email"
            AttributeType: "S"   
       KeySchema:
          -
            AttributeName: "email"
            KeyType: "HASH"
       ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
